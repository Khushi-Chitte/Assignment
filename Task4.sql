
--------------------------------------------------Task 4-------------------------------------------------------

USE TicketBookingSystem

--Task4 Q1 Calculate the Average Ticket Price for Events in Each Venue

SELECT venue_name, (SELECT AVG(ticket_price) 
                   FROM Event 
                   WHERE Event.venue_id = Venu.venue_id) AS average_price
FROM Venu;


--Task4 Q2 Find Events with More Than 50% of Tickets Sold using subquery.SELECT event_name
FROM Event
WHERE total_seats / 2 < (SELECT SUM(num_tickets) 
                         FROM Booking 
                         WHERE Booking.event_id = Event.event_id);


--Task4 Q3 Calculate the Total Number of Tickets Sold for Each Event
SELECT event_name, (SELECT SUM(num_tickets) 
                    FROM Booking 
                    WHERE Booking.event_id = Event.event_id) AS total_tickets_sold
FROM Event;


--Task4 Q4 Find Users Who Have Not Booked Any Tickets Using a NOT EXISTS Subquery.SELECT customer_name
FROM Customer
WHERE NOT EXISTS (SELECT 1 
                  FROM Booking 
                  WHERE Booking.customer_id = Customer.customer_id);


--Task4 Q5 List Events with No Ticket Sales Using a NOT IN Subquery.
SELECT event_name
FROM Event
WHERE event_id NOT IN (SELECT event_id FROM Booking);

--Task4 Q6 Calculate the Total Number of Tickets Sold for Each Event Type
SELECT event_type, SUM(total_tickets_sold) AS total_tickets
FROM (SELECT event_type, num_tickets AS total_tickets_sold
      FROM Booking
      JOIN Event ON Booking.event_id = Event.event_id) AS EventTickets
GROUP BY event_type;


--Task4 Q7 Find Events with Ticket Prices Higher Than the Average Ticket Price 
SELECT event_name, ticket_price
FROM Event
WHERE ticket_price > (SELECT AVG(ticket_price) 
                      FROM Event);


--Task4 Q8 Calculate the Total Revenue Generated by Events for Each User
SELECT customer_name, (SELECT SUM(total_cost) 
                       FROM Booking 
                       WHERE Booking.customer_id = Customer.customer_id) AS total_revenue
FROM Customer;


--Task4 Q9 List Users Who Have Booked Tickets for Events in a Given Venue
SELECT customer_name
FROM Customer
WHERE customer_id IN (SELECT customer_id 
                      FROM Booking
                      WHERE event_id IN (SELECT event_id 
                                         FROM Event 
                                         WHERE venue_id = 1));


--Task4 Q10 Calculate the Total Number of Tickets Sold for Each Event Category 
SELECT event_type, SUM(total_tickets_sold) AS total_tickets
FROM (SELECT event_type, num_tickets AS total_tickets_sold
      FROM Booking
      JOIN Event ON Booking.event_id = Event.event_id) AS EventCategory
GROUP BY event_type;


--Task4 Q11 Find Users Who Have Booked Tickets for Events in each Month
SELECT customer_name
FROM Customer
WHERE EXISTS (SELECT 1 
              FROM Booking 
              WHERE Customer.customer_id = Booking.customer_id 
              AND DATEPART(MONTH, booking_date) = 11);


--Task4 Q12 Calculate the Average Ticket Price for Events in Each Venue
SELECT venue_name, (SELECT AVG(ticket_price) 
                   FROM Event 
                   WHERE Event.venue_id = Venu.venue_id) AS average_price
FROM Venu;
